filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 4, color = 'red', linetype = 2)
birth_marry$DT
#1번
birth_marry$DT=as.numeric(birth_marry$DT)
birth_marry$DT
birth_marry %>%
filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 4, color = 'red', linetype = 2)
birth_marry %>%
filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', linetype = 2)
#2번
birth_marry %>%
filter(!is.na(DT))
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외')%>%
group_by(C1_NM)
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = DT)) +
geom_col() +
coord_flip() +
xlab('')
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR'&PRD_DE=='2022')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = DT)) +
geom_col() +
coord_flip() +
xlab('')
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR'&PRD_DE=='2022')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = 출산율)) +
geom_col() +
coord_flip() +
xlab('')
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR'&PRD_DE=='2022')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = '출산율')) +
geom_col() +
coord_flip() +
xlab('')
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR'&PRD_DE=='2022')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = DT)) +
geom_col() +
coord_flip() +
xlab('')
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR'&PRD_DE=='2022')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = DT)) +
geom_col() +
coord_flip() +
xlab('시도') +
ylab('출산율')
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid()
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid( ~ C1_NM)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(. ~ C1_NM)
birth_marry %>%
filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', linetype = 2)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(. ~ C1_NM)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(. ~ C1_NM, rows=3)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(. ~ C1_NM, rows=3)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(. ~ C1_NM, cols=3)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(. ~ C1_NM,rows=5, cols=4)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(. ~ C1_NM)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(rows = vars(C1_NM), cols = vars(C1_NM))
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid()
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(~DT)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(~C1_NM)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_grid(~C1_NM)
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG!='TFR'&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_wrap(~C1_NM)
birth_marry$ITM_NM_ENG
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG=="Crude marriage rate(per 1000 population)"&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_wrap(~C1_NM)
birth_marry %>%
filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', linetype = 2)
#1번
birth_marry$DT=as.numeric(birth_marry$DT)
birth_marry %>%
filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', linetype = 2)
library(dplyr)
library(tidyr)
library(magrittr)
library(ggplot2)
library(readxl)
library(haven)
library(stringr)
library(forcats)
birth_marry = read_xlsx("midterm.xlsx", sheet = '출산및혼인')
motherage_avg = read_xlsx("midterm.xlsx", sheet = '모나이평균')
motherage_group = read_xlsx("midterm.xlsx", sheet = '모나이그룹')
#1번
birth_marry$DT=as.numeric(birth_marry$DT)
birth_marry %>%
filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', linetype = 2)
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR'&PRD_DE=='2022')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = DT)) +
geom_col() +
coord_flip() +
xlab('시도') +
ylab('출산율')
#2번
birth_marry %>%
filter(!is.na(DT)&C1_NM!='전국'&C1_NM!='국외'&ITM_NM_ENG=='TFR'&PRD_DE=='2022')%>%
ggplot(aes(x = fct_reorder(C1_NM, DT), y = DT)) +
geom_col() +
coord_flip() +
xlab('시도') +
ylab('출산율')
#3번
birth_marry%>%
filter(!is.na(DT)&ITM_NM_ENG=="Crude marriage rate(per 1000 population)"&C1_NM!='전국'&C1_NM!='국외')%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
facet_wrap(~C1_NM)
#4번
motherage_avg%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()
#4번
motherage_avg%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
geom_point()
#4번
motherage_avg%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
geom_point()+
theme(panel.grid.major = element_line(color = "gray", linetype = "dashed"))
birth_marry %>%
filter(ITM_NM_ENG=='TFR'&C1_NM=='전국') %>%
ggplot(aes(x = PRD_DE, y = DT, group = 1)) +
geom_line() +
geom_hline(yintercept = 1, color = 'red', linetype = 2)
#4번
motherage_avg%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
geom_point()
source("C:/Users/kkksk/Development/CustomerDataAnalysis/CDAU/Midterm.R", echo=TRUE)
motherage_avg%>%
ggplot(aes(x = PRD_DE, y = DT, group = 1))+
geom_line()+
geom_point()
#5번
motherage_group$DT=as.numeric(motherage_group$DT)
View(motherage_group)
motherage_group_wider = motherage_group %>% pivot_wider(names_from = 'PRD_DE', values_from = 'DT')
View(motherage_group_wider)
where(motherage_group_wider$C2_NM)
which(motherage_group_wider$C2_NM)
where(names(motherage_group_wider)==C2_NM)
where(names(motherage_group_wider)=='C2_NM')
names(motherage_group_wider)
where(names(motherage_group_wider)==C2_NM)
which(names(motherage_group_wider)=='C2_NM')
motherage_group_wider<-select(motherage_group_wider,23:)
motherage_group_wider<-motherage_group_wider[,23:]
motherage_group_wider<-motherage_group_wider[,23:]
motherage_group_wider<-motherage_group_wider[,23:ncol(motherage_group_wider)]
#6번
motherage_group_wider%>%
filter(C2_NM=='계'&C3_NM!='총계')%>%
ggplot(aes(x=PRD_DE,y = DT/sum(DT),group = C3_NM, color = C3_NM))+
ggeom_line()
#6번
motherage_group_wider%>%
filter(C2_NM=='계'&C3_NM!='총계')%>%
ggplot(aes(x=PRD_DE,y = DT/sum(DT),group = C3_NM, color = C3_NM))+
geom_line()
#6번
motherage_group_wider%>%
filter(C2_NM=='계'&C3_NM!='총계')%>%
ggplot(aes(x=col(motherage_group_wider),y = DT/sum(DT),group = C3_NM, color = C3_NM))+
geom_line()
#6번
motherage_group%>%
filter(C2_NM=='계'&C3_NM!='총계')%>%
ggplot(aes(x=PRD_DE,y = DT/sum(DT),group = C3_NM, color = C3_NM))+
geom_line()
#6번
motherage_group%>%
filter(C2_NM=='계'&C3_NM!='총계')%>%
ggplot(aes(x=PRD_DE,y = DT/sum(DT),group = C3_NM, color = C3_NM))+
geom_line()+
geom_point()
motherage_group%>%
filter(C2_NM=='계'&C3_NM!='총계')
#6번
motherage_group%>%
filter(C2_NM=='계'&C3_NM!='총계')%>%
group_by(C3_NM) %>%
mutate(DT_ratio = DT / sum(DT)) %>%
ggplot(aes(x = PRD_DE, y = DT_ratio, group = C3_NM, color = C3_NM)) +
geom_line()+
geom_point()
#6번
motherage_group%>%
filter(C2_NM=='계'&C3_NM!='총계')%>%
group_by(PRD_DE) %>%
mutate(DT_ratio = DT / sum(DT)) %>%
ggplot(aes(x = PRD_DE, y = DT_ratio, group = C3_NM, color = C3_NM)) +
geom_line()+
geom_point()
View(motherage_group_wider)
welfare %>%
filter(지표 != '아동') %>%
group_by(지역명, 지표) %>%
summarize(n = n()) %>%
ungroup() %>%
pivot_wider(names_from = '지표', values_from = n) %>%
mutate(고령화수준 = 고령 / 생산가능인구) %>%
ggplot(aes(x = 지역명, y = 고령화수준)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits=rev)
library(dplyr)
welfare = raw %>% select('h16_g3',   # 성별
'h16_g4',   # 태어난 연도
'h16_g6',   # 교육 수준
'h16_eco9', # 직종 코드
'h16_reg7', # 지역 코드
'p1602_8aq1' # 월급
) %>%
set_colnames(c('성별', '연도', '교육', '직종', '지역', '월급'))
raw = read_sav("Koweps_hpc16_2021_beta1.sav")
dim(raw)
library(readxl)
raw = read_sav("Koweps_hpc16_2021_beta1.sav")
library(tidyr)
library(magrittr)
library(ggplot2)
library(readxl)
library(haven)
library(stringr)
library(forcats)
raw = read_sav("Koweps_hpc16_2021_beta1.sav")
dim(raw)
welfare = raw %>% select('h16_g3',   # 성별
'h16_g4',   # 태어난 연도
'h16_g6',   # 교육 수준
'h16_eco9', # 직종 코드
'h16_reg7', # 지역 코드
'p1602_8aq1' # 월급
) %>%
set_colnames(c('성별', '연도', '교육', '직종', '지역', '월급'))
raw = read_sav("Koweps_hpc16_2021_beta1.sav")
raw = read_sav("Koweps_hpc16_2021_beta1.sav")
setwd("C:/Users/kkksk/Development/CustomerDataAnalysis/CDAU")
raw = read_sav("Koweps_hpc16_2021_beta1.sav")
raw = read_sav("Koweps_hpc16_2021_beta1.sav")
dim(raw)
welfare = raw %>% select('h16_g3',   # 성별
'h16_g4',   # 태어난 연도
'h16_g6',   # 교육 수준
'h16_eco9', # 직종 코드
'h16_reg7', # 지역 코드
'p1602_8aq1' # 월급
) %>%
set_colnames(c('성별', '연도', '교육', '직종', '지역', '월급'))
welfare %>%
select(성별) %>%
table()
welfare = welfare %>%
mutate(성별 = if_else(성별 == 1, '남', '여'))
welfare %>%
select(성별) %>%
ggplot(aes(x = 성별)) +
geom_bar()
welfare %>%
select(나이) %>%
ggplot(aes(x = 나이)) +
geom_bar()
welfare %>%
select(월급) %>%
summary()
welfare = welfare %>%
mutate(월급 = if_else(월급 == 0, NA, 월급))
library(httr)
library(rvest)
install.packages("rvest")
library(rvest)
url = 'https://quotes.toscrape.com/'
library(httr)
library(rvest)
url = 'https://quotes.toscrape.com/'
quote = GET(url)
print(quote)
print(quote_html)
quote_html = read_html(quote)
print(quote_html)
quote_div = quote_html %>%
html_nodes('div.quote') %>%
html_nodes('span.text')
print(quote_div)
quote_who = quote_html %>%
html_nodes('div.quote') %>%
html_nodes('span') %>%
html_nodes('small.author') %>%
html_text()
print(quote_who)
quote_div %>% html_text()
quote_who = quote_html %>%
html_nodes('div.quote') %>%
html_nodes('span') %>%
html_nodes('small.author') %>%
html_text()
print(quote_who)
quote_html
print(quote_html)
View(quote_div)
View(quote_html)
quote_div %>% html_text()
quote_div %>% html_text()
print(quote_div)
quote_link = quote_html %>%
html_nodes('div.quote') %>%
html_nodes('span') %>%
html_nodes('a') %>%
html_attr('href')
print(quote_link)
quote_link = paste0('https://quotes.toscrape.com', quote_link)
quote_link
quote_df = data.frame(
'quote' = quote_text,
'author' = quote_who,
'link' = quote_link
)
quote_text = quote_div %>%
html_text()
print(quote_text)
quote_df = data.frame(
'quote' = quote_text,
'author' = quote_who,
'link' = quote_link
)
quote_df
library(stringr)
data_sales %>%
html_text() %>%
str_flatten() %>%
readr::parse_number()
url = 'http://www.yes24.com/Product/Goods/117293655'
data = GET(url)
data_sales = data %>%
read_html() %>%
html_nodes(xpath = '//*[@id="yDetailTopWrap"]/div[2]/div[1]/span[3]/span[3]')
print(data_sales)
data_sales %>%
html_text() %>%
str_flatten() %>%
readr::parse_number()
data_sales %>%
html_text() %>%
#str_flatten() %>%
readr::parse_number()
url = 'https://en.wikipedia.org/wiki/List_of_UFC_champions'
data_ufc = GET(url)
champion_list = data_ufc %>%
read_html() %>%
html_table()
View(champion_list)
champion_list = data_ufc %>%
read_html()
champion_list
champion_list = data_ufc %>%
read_html() %>%
html_table()
data_lotto_html = data_lotto %>% read_html()
url = 'https://www.dhlottery.co.kr/gameResult.do?method=byWin'
data_lotto = POST(
url,
body = list(
drwNo = "1009",
dwrNoList = "1009"
)
)
data_lotto_html = data_lotto %>% read_html()
url = 'https://en.wikipedia.org/wiki/List_of_UFC_champions'
data_ufc = GET(url)
champion_list = data_ufc %>%
read_html() %>%
html_table()
champion_list[[1]]
data_lotto_html %>%
html_nodes('.num.win') %>%
html_text()
data_lotto_html %>%
html_nodes('div.num.win') %>%
html_text()
# 1
data_lotto_html %>%
html_nodes('.num.win') %>%
html_text() %>%
str_extract_all('(\\d)+') %>%
unlist()
champion_list = data_ufc %>%
read_html() %>%
html_table()
